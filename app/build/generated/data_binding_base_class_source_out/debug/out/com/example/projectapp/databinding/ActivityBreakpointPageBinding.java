// Generated by view binder compiler. Do not edit!
package com.example.projectapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.projectapp.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBreakpointPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout FEWFEWFWEF;

  @NonNull
  public final TextInputEditText breakpoint;

  @NonNull
  public final TextInputEditText destiny;

  @NonNull
  public final ConstraintLayout efefefefefefefef;

  @NonNull
  public final TextView fefefe;

  @NonNull
  public final ConstraintLayout fezxaxa;

  @NonNull
  public final Button filterBtnNext;

  @NonNull
  public final ConstraintLayout fqefeqqegqg;

  @NonNull
  public final TextView fwaxax;

  @NonNull
  public final TextInputEditText origin;

  @NonNull
  public final Button searchResults;

  @NonNull
  public final TextView stoopid;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final ConstraintLayout vebvee;

  @NonNull
  public final ConstraintLayout wdwdwdwd;

  private ActivityBreakpointPageBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout FEWFEWFWEF, @NonNull TextInputEditText breakpoint,
      @NonNull TextInputEditText destiny, @NonNull ConstraintLayout efefefefefefefef,
      @NonNull TextView fefefe, @NonNull ConstraintLayout fezxaxa, @NonNull Button filterBtnNext,
      @NonNull ConstraintLayout fqefeqqegqg, @NonNull TextView fwaxax,
      @NonNull TextInputEditText origin, @NonNull Button searchResults, @NonNull TextView stoopid,
      @NonNull TextView textView20, @NonNull ConstraintLayout vebvee,
      @NonNull ConstraintLayout wdwdwdwd) {
    this.rootView = rootView;
    this.FEWFEWFWEF = FEWFEWFWEF;
    this.breakpoint = breakpoint;
    this.destiny = destiny;
    this.efefefefefefefef = efefefefefefefef;
    this.fefefe = fefefe;
    this.fezxaxa = fezxaxa;
    this.filterBtnNext = filterBtnNext;
    this.fqefeqqegqg = fqefeqqegqg;
    this.fwaxax = fwaxax;
    this.origin = origin;
    this.searchResults = searchResults;
    this.stoopid = stoopid;
    this.textView20 = textView20;
    this.vebvee = vebvee;
    this.wdwdwdwd = wdwdwdwd;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBreakpointPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBreakpointPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_breakpoint_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBreakpointPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FEWFEWFWEF;
      ConstraintLayout FEWFEWFWEF = rootView.findViewById(id);
      if (FEWFEWFWEF == null) {
        break missingId;
      }

      id = R.id.breakpoint;
      TextInputEditText breakpoint = rootView.findViewById(id);
      if (breakpoint == null) {
        break missingId;
      }

      id = R.id.destiny;
      TextInputEditText destiny = rootView.findViewById(id);
      if (destiny == null) {
        break missingId;
      }

      id = R.id.efefefefefefefef;
      ConstraintLayout efefefefefefefef = rootView.findViewById(id);
      if (efefefefefefefef == null) {
        break missingId;
      }

      id = R.id.fefefe;
      TextView fefefe = rootView.findViewById(id);
      if (fefefe == null) {
        break missingId;
      }

      id = R.id.fezxaxa;
      ConstraintLayout fezxaxa = rootView.findViewById(id);
      if (fezxaxa == null) {
        break missingId;
      }

      id = R.id.filterBtnNext;
      Button filterBtnNext = rootView.findViewById(id);
      if (filterBtnNext == null) {
        break missingId;
      }

      id = R.id.fqefeqqegqg;
      ConstraintLayout fqefeqqegqg = rootView.findViewById(id);
      if (fqefeqqegqg == null) {
        break missingId;
      }

      id = R.id.fwaxax;
      TextView fwaxax = rootView.findViewById(id);
      if (fwaxax == null) {
        break missingId;
      }

      id = R.id.origin;
      TextInputEditText origin = rootView.findViewById(id);
      if (origin == null) {
        break missingId;
      }

      id = R.id.searchResults;
      Button searchResults = rootView.findViewById(id);
      if (searchResults == null) {
        break missingId;
      }

      id = R.id.stoopid;
      TextView stoopid = rootView.findViewById(id);
      if (stoopid == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = rootView.findViewById(id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.vebvee;
      ConstraintLayout vebvee = rootView.findViewById(id);
      if (vebvee == null) {
        break missingId;
      }

      id = R.id.wdwdwdwd;
      ConstraintLayout wdwdwdwd = rootView.findViewById(id);
      if (wdwdwdwd == null) {
        break missingId;
      }

      return new ActivityBreakpointPageBinding((ConstraintLayout) rootView, FEWFEWFWEF, breakpoint,
          destiny, efefefefefefefef, fefefe, fezxaxa, filterBtnNext, fqefeqqegqg, fwaxax, origin,
          searchResults, stoopid, textView20, vebvee, wdwdwdwd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
