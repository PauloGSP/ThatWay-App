// Generated by view binder compiler. Do not edit!
package com.example.projectapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.projectapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCtSearchResultsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView CTSearchResultsTitle;

  @NonNull
  public final Button changeLocationFiltersBtn;

  @NonNull
  public final TextView destinyText;

  @NonNull
  public final ImageButton homeBtnShowTransports4;

  @NonNull
  public final Button next;

  @NonNull
  public final TextView originText;

  @NonNull
  public final ImageButton returnBtn4;

  @NonNull
  public final TextView textView22;

  private ActivityCtSearchResultsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView CTSearchResultsTitle, @NonNull Button changeLocationFiltersBtn,
      @NonNull TextView destinyText, @NonNull ImageButton homeBtnShowTransports4,
      @NonNull Button next, @NonNull TextView originText, @NonNull ImageButton returnBtn4,
      @NonNull TextView textView22) {
    this.rootView = rootView;
    this.CTSearchResultsTitle = CTSearchResultsTitle;
    this.changeLocationFiltersBtn = changeLocationFiltersBtn;
    this.destinyText = destinyText;
    this.homeBtnShowTransports4 = homeBtnShowTransports4;
    this.next = next;
    this.originText = originText;
    this.returnBtn4 = returnBtn4;
    this.textView22 = textView22;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCtSearchResultsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCtSearchResultsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ct_search_results, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCtSearchResultsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CT_SearchResultsTitle;
      TextView CTSearchResultsTitle = rootView.findViewById(id);
      if (CTSearchResultsTitle == null) {
        break missingId;
      }

      id = R.id.changeLocationFiltersBtn;
      Button changeLocationFiltersBtn = rootView.findViewById(id);
      if (changeLocationFiltersBtn == null) {
        break missingId;
      }

      id = R.id.destinyText;
      TextView destinyText = rootView.findViewById(id);
      if (destinyText == null) {
        break missingId;
      }

      id = R.id.homeBtnShowTransports4;
      ImageButton homeBtnShowTransports4 = rootView.findViewById(id);
      if (homeBtnShowTransports4 == null) {
        break missingId;
      }

      id = R.id.next;
      Button next = rootView.findViewById(id);
      if (next == null) {
        break missingId;
      }

      id = R.id.originText;
      TextView originText = rootView.findViewById(id);
      if (originText == null) {
        break missingId;
      }

      id = R.id.returnBtn4;
      ImageButton returnBtn4 = rootView.findViewById(id);
      if (returnBtn4 == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = rootView.findViewById(id);
      if (textView22 == null) {
        break missingId;
      }

      return new ActivityCtSearchResultsBinding((ConstraintLayout) rootView, CTSearchResultsTitle,
          changeLocationFiltersBtn, destinyText, homeBtnShowTransports4, next, originText,
          returnBtn4, textView22);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
